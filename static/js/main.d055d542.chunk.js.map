{"version":3,"sources":["component/TopHeader.js","Data/Questions.js","container/DisplayNames/DisplayNames.js","container/Home.js","container/DisplayNames/DisplaySingleName.js","Data/MutipleChoose.js","container/SingleQuestion/index.js","container/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","root","title","display","breakpoints","up","text","justifyContent","sectionDesktop","TopHeader","classes","useState","Date","date","setDate","weekdayName","getDay","useEffect","timer","setInterval","clearInterval","className","AppBar","position","Toolbar","variant","Typography","color","toLocaleDateString","toLocaleTimeString","Questions","id","Name","TotalAnswered","Correct","Wrong","correctAnswer","NamesAll","Correct_Names","Wrong_Names","ChooseA","ChooseB","ChooseC","ChooseD","url","base","image","DisplayNames","props","map","name","Flag","WrongName","includes","key","style","backgroundColor","Home","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","item","index","src","alt","dataSource","onPointClick","this","argumentField","type","hoverMode","selectionMode","visible","precision","valueField","verticalAlignment","horizontalAlignment","enabled","Accordion","boxShadow","AccordionSummary","expandIcon","aria-controls","AccordionDetails","CorrectName","React","Component","DisplaySingleName","MutipleChoice","Choice","Number_","Name_","Question","useParams","console","log","barPadding","margin","spacing","Correct_Rate","marginLeft","App","Clicked","setClicked","background","to","textDecoration","onClick","Math","round","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d055d542.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n        flexGrow: 1,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n    },\r\n  },\r\n  text: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n    },\r\n},\r\n}));\r\n\r\nexport default function TopHeader() {\r\n  const classes = useStyles();\r\n  let [date, setDate] = useState(new Date());\r\n  const arrayOfWeekdays = [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"]\r\n\r\n    let dateObj = new Date()\r\n    let weekdayNumber = dateObj.getDay()\r\n    let weekdayName = arrayOfWeekdays[weekdayNumber]\r\n    useEffect(\r\n        () => {\r\n            var timer = setInterval(()=>setDate(new Date()), 1000)\r\n            return function cleanup() {\r\n                clearInterval(timer)\r\n            }\r\n        }\r\n    )\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\" className={classes.text}>\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n            \r\n          </Typography>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            答题报告\r\n          </Typography>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            <p> {weekdayName}  {date.toLocaleDateString()} <span></span> {date.toLocaleTimeString()}</p>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","const base = '/';\r\n\r\nconst Questions = [{\r\n    id: 1,\r\n    Name: '题一',\r\n    TotalAnswered: 5,\r\n    Correct: 13,\r\n    Wrong: 2,\r\n    correctAnswer: \"A\",\r\n    NamesAll: ['赵一','赵二','赵三','赵四','赵五'],\r\n    Correct_Names: ['赵一','赵二','赵三',],\r\n    Wrong_Names: ['赵四','赵五'],\r\n    ChooseA: ['赵一','赵二','赵三',],\r\n    ChooseB: ['赵五'],\r\n    ChooseC: ['赵四'],\r\n    ChooseD: null,\r\n    url: base + '1',\r\n    image: 'https://jsonplaceholder.typicode.com/photos/1'\r\n},{\r\n    id: 2,\r\n    Name: '题二',\r\n    TotalAnswered: 5,\r\n    Correct: 3,\r\n    Wrong: 12,\r\n    correctAnswer: \"A\",\r\n    NamesAll: ['赵一','赵二','赵三','赵四','赵五'],\r\n    Correct_Names: ['赵一','赵二','赵三',],\r\n    Wrong_Names: ['赵四','赵五'],\r\n    ChooseA: ['赵一','赵二','赵三',],\r\n    ChooseB: ['赵五'],\r\n    ChooseC: ['赵四'],\r\n    ChooseD: null,\r\n    url: base + '2',\r\n    image: 'https://jsonplaceholder.typicode.com/photos/2'\r\n},{\r\n    id: 3,\r\n    Name: '题三',\r\n    TotalAnswered: 5,\r\n    Correct: 13,\r\n    Wrong: 11,\r\n    correctAnswer: \"A\",\r\n    NamesAll: ['赵一','赵二','赵三','赵四','赵五'],\r\n    Correct_Names: ['赵一','赵二','赵三',],\r\n    Wrong_Names: ['赵四','赵五'],\r\n    ChooseA: ['赵一','赵二','赵三',],\r\n    ChooseB: ['赵五'],\r\n    ChooseC: ['赵四'],\r\n    ChooseD: null,\r\n    url: base + '3',\r\n    image: 'https://jsonplaceholder.typicode.com/photos/3'\r\n},{\r\n    id: 4,\r\n    Name: '题四',\r\n    TotalAnswered: 5,\r\n    Correct: 15,\r\n    Wrong: 2,\r\n    correctAnswer: \"A\",\r\n    NamesAll: ['赵一','赵二','赵三','赵四','赵五'],\r\n    Correct_Names: ['赵一','赵二','赵三',],\r\n    Wrong_Names: ['赵四','赵五'],\r\n    ChooseA: ['赵一','赵二','赵三',],\r\n    ChooseB: ['赵五'],\r\n    ChooseC: ['赵四'],\r\n    ChooseD: null,\r\n    url: base + '4',\r\n    image: 'https://jsonplaceholder.typicode.com/photos/4'\r\n}]\r\n\r\nexport default Questions;","import React from 'react';\r\n\r\nimport './DisplayNames.css'\r\n\r\nfunction DisplayNames (props) {\r\n    //const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"NameContainer\">\r\n            {props.Name.map(name => {\r\n                let Flag = false;\r\n                if(props.WrongName.includes(name)) {\r\n                    Flag=true\r\n                }\r\n                return (\r\n                    <div key={name} style={{ backgroundColor: Flag ? \"red\" : \"green\" }} className=\"SingleName\">\r\n                        {name}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default DisplayNames;","import React from 'react';\r\nimport './Home.css'\r\nimport Questions from '../Data/Questions'\r\nimport { Chart, Series, CommonSeriesSettings, Label, Format, Legend, Export } from 'devextreme-react/chart';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DisplayNames from './DisplayNames/DisplayNames'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  }));\r\n\r\nclass Home extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"Container\">\r\n                <div className=\"Left_Container\">\r\n                    {Questions.map((item, index) => {\r\n                        return (\r\n                            <li key={item.id}>\r\n                                <img src={item.image} alt=\"题目\"></img>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"Right_Container\">\r\n                    <div className=\"QAStats\">\r\n                        <Chart id=\"chart\"\r\n                            title=\"\"\r\n                            dataSource={Questions}\r\n                            onPointClick={this.onPointClick}\r\n                            className=\"Chart\"\r\n                        >\r\n                            <CommonSeriesSettings\r\n                            argumentField=\"Name\"\r\n                            type=\"bar\"\r\n                            hoverMode=\"allArgumentPoints\"\r\n                            selectionMode=\"allArgumentPoints\"\r\n                            >\r\n                            <Label visible={true}>\r\n                                <Format type=\"fixedPoint\" precision={0} />\r\n                            </Label>\r\n                            </CommonSeriesSettings>\r\n                            <Series\r\n                            valueField=\"Wrong\"\r\n                            name=\"错\"\r\n                            color=\"red\"\r\n                            />\r\n                            <Series\r\n                            valueField=\"Correct\"\r\n                            name=\"对\"\r\n                            color=\"green\"\r\n                            />\r\n                            <Legend verticalAlignment=\"bottom\" horizontalAlignment=\"center\"></Legend>\r\n                            <Export enabled={true} />\r\n                        </Chart>\r\n                    </div>\r\n                    <div className=\"details\">\r\n                        <div className=\"AnswerDetails\">\r\n                            答题详情\r\n                        </div>\r\n                        <div className=\"DetailedAnswer\">\r\n                            {Questions.map((item, index) => {\r\n                                return (\r\n                                    <Accordion key={item.id} style={{boxShadow: \"none\"}}>\r\n                                        <AccordionSummary\r\n                                        expandIcon={<ExpandMoreIcon />}\r\n                                        aria-controls=\"panel1a-content\"\r\n                                        id=\"panel1a-header\"\r\n                                        >\r\n                                            <Typography><span className=\"QuestionName\">{item.Name}</span><span className=\"CorrectAnswer\">{item.correctAnswer}</span></Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <DisplayNames Name={item.NamesAll} CorrectName={item.Correct_Names} WrongName={item.Wrong_Names}/>\r\n                                            \r\n                                        </AccordionDetails>\r\n                                    </Accordion>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport './DisplayNames.css'\r\nfunction DisplaySingleName(props) {\r\n    return (\r\n        <div className=\"NameContainer\">\r\n            {props.Name.map(name => {\r\n                return (\r\n                    <div key={name} className=\"MutipleChoiceName\">\r\n                        {name}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\nexport default DisplaySingleName;","const MutipleChoice = [\r\n    {\r\n        Choice: 'A',\r\n        Number_: 3,\r\n        Name_: [\"赵一\",\"赵小东\"],\r\n        Correct: \"A\"\r\n    },\r\n    {\r\n        Choice: 'B',\r\n        Number_: 2,\r\n        Name_: [\"赵一二\",\"赵小东\"],\r\n        Correct: \"A\"\r\n    },\r\n    {\r\n        Choice: 'C',\r\n        Number_: 4,\r\n        Name_: [\"赵一仨\",\"赵小东\"],\r\n        Correct: \"A\"\r\n    },\r\n    {\r\n        Choice: 'D',\r\n        Number_: 7,\r\n        Name_: [\"赵一斯\",\"赵小东\"],\r\n        Correct: \"A\"\r\n    },\r\n]\r\nexport default MutipleChoice;","import React from 'react';\r\nimport '../Home.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\nimport DisplaySingleName from '../DisplayNames/DisplaySingleName'\r\nimport Questions from '../../Data/Questions'\r\nimport { Chart, Series, CommonSeriesSettings, Label, Format, Legend, Export } from 'devextreme-react/chart';\r\nimport MutipleChoice from '../../Data/MutipleChoose'\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DisplayNames from '../DisplayNames/DisplayNames'\r\nfunction Question() {\r\n\r\n    let { id } = useParams();\r\n    console.log(id)\r\n    return (\r\n        <div className=\"Container\">\r\n        <div className=\"Left_Container\">\r\n            <img src={Questions[id-1].image}></img>\r\n        </div>\r\n        <div className=\"Right_Container\">\r\n            <div className=\"QAStats\">\r\n                <Chart id=\"chart\"\r\n                    title=\"\"\r\n                    dataSource={Questions, MutipleChoice}\r\n                    className=\"Chart\"\r\n                >\r\n                    <CommonSeriesSettings\r\n                    argumentField=\"Choice\"\r\n                    type=\"bar\"\r\n                    hoverMode=\"allArgumentPoints\"\r\n                    \r\n                    barPadding={0.5}\r\n                    >\r\n                    <Label visible={true}>\r\n                        <Format type=\"fixedPoint\" precision={0} />\r\n                    </Label>\r\n                    </CommonSeriesSettings>\r\n                    <Series\r\n                    valueField=\"Number_\"\r\n                    name=\"选项\"\r\n                    color=\"red\"\r\n                    />\r\n                    <Legend verticalAlignment=\"bottom\" horizontalAlignment=\"center\"></Legend>\r\n                    <Export enabled={true} />\r\n                </Chart>\r\n            </div>\r\n            <div className=\"details\">\r\n                <div className=\"AnswerDetails\">\r\n                    答题详情\r\n                </div>\r\n                <div className=\"DetailedAnswer\">\r\n                    {MutipleChoice.map((item, index) => {\r\n                        return (\r\n                            <Accordion key={item.id} style={{boxShadow: \"none\"}}>\r\n                                <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                                >\r\n                                    <Typography>\r\n                                        <span className=\"QuestionName\">答案</span>\r\n                                        <span className=\"CorrectAnswer\"  style={{ color: (item.Choice === Questions[id-1].correctAnswer) ? \"green\" : \"red\" }}>{item.Choice}</span>\r\n                                    </Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <DisplaySingleName Name={item.Name_} />\r\n                                    \r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  export default Question;","import React, { useState } from 'react';\r\nimport './index.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\nimport TopHeader from '../component/TopHeader'\r\nimport Home from './Home'\r\nimport Questions from '../Data/Questions'\r\nimport Question from './SingleQuestion/index'\r\nimport { Background } from 'devextreme-react/range-selector';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        \r\n      },\r\n    },\r\n    Correct_Rate: {\r\n        marginLeft: 20\r\n    }\r\n  }));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    const [Clicked, setClicked] = useState(0)\r\n\r\n        return (\r\n            <div>\r\n                <TopHeader />\r\n                <Router>\r\n                    <div>\r\n                        <div className={classes.root}>\r\n                            <div className=\"circleBase type1\" style={{ background: Clicked===0 ? \"blue\" : null}}>\r\n                                <Link to=\"/AnswerStats\" style={{ color:\"white\", textDecoration: \"none\"}} onClick={()=>setClicked(0)}>\r\n                                    全部\r\n                                </Link>\r\n                            </div>\r\n                            {Questions.map(item => {\r\n                                return (\r\n                                    <div key={item.id} className=\"navContainer\">\r\n                                        <div className=\"circleBase type1\" style={{ background: Clicked===item.id ? \"blue\" : null}}>\r\n                                            <Link to={`/AnswerStats/${item.id}`} style={{ color:\"white\", textDecoration: \"none\"}} onClick={()=>setClicked(item.id)}>\r\n                                                {item.Name}\r\n                                            </Link>\r\n                                        </div>\r\n                                        <span className={classes.Correct_Rate} className=\"CorrectRate\">\r\n                                            {Math.round((item.Correct/(item.Correct+item.Wrong))*100)}%\r\n                                        </span>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <hr />\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Home />\r\n                            </Route>\r\n                            <Route\r\n                                path={`/:id`}>\r\n                                    <Question />\r\n                                </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n            \r\n        )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/index';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}